services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        TARGETENV: ${TARGET:-dev}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./backend:/app
    env_file:
      - .env
    profiles:
      - non-raspberry-pi
    networks:
      - memory_network

  backend_rpi:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        TARGETENV: ${TARGET:-prod}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./backend:/app
    env_file:
      - .env
    devices:
      - /dev/gpiochip0:/dev/gpiochip0
      - /dev/video0:/dev/video0
    profiles:
      - raspberry-pi
    networks:
      - memory_network
    cap_add:
      - SYS_ADMIN
      - SYS_RAWIO
    privileged: true
      


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NODE_VERSION: "${NODE_VERSION}"
        FRONTEND_PORT: "${FRONTEND_PORT}"
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
    env_file:
      - .env
    networks:
      - memory_network

networks:
  memory_network:
    driver: bridge
